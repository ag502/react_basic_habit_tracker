{"version":3,"sources":["components/habit.jsx","components/habitAddForm.jsx","components/habits.jsx","components/navbar.jsx","app.jsx","components/simpleHabit.jsx","index.js"],"names":["Habit","handleIncrement","props","onIncrement","habit","handleDecrement","onDecrement","handleDelete","onDelete","console","log","this","name","count","className","onClick","PureComponent","HabitAddForm","memo","inputRef","createRef","onSubmit","event","preventDefault","newHabit","current","value","onAdd","ref","type","placeholder","Habits","habits","map","key","id","onReset","Component","Navbar","totalCount","SimpleHabit","useState","setCount","spanRef","useRef","useCallback","ReactDOM","render","document","getElementById"],"mappings":"kRAqDeA,G,kNA1CbC,gBAAkB,WAChB,EAAKC,MAAMC,YAAY,EAAKD,MAAME,Q,EAGpCC,gBAAkB,WAChB,EAAKH,MAAMI,YAAY,EAAKJ,MAAME,Q,EAGpCG,aAAe,WACb,EAAKL,MAAMM,SAAS,EAAKN,MAAME,Q,kEAhB/BK,QAAQC,IAAR,iBAAsBC,KAAKT,MAAME,MAAMQ,KAAvC,e,6CAIAH,QAAQC,IAAR,iBAAsBC,KAAKT,MAAME,MAAMQ,KAAvC,sB,+BAeQ,IAAD,EACiBD,KAAKT,MAAME,MAA3BQ,EADD,EACCA,KAAMC,EADP,EACOA,MAEd,OADAJ,QAAQC,IAAR,gBAAqBE,IAEnB,wBAAIE,UAAU,SACZ,0BAAMA,UAAU,cAAcF,GAC9B,0BAAME,UAAU,eAAeD,GAC/B,4BACEC,UAAU,8BACVC,QAASJ,KAAKV,iBAEd,uBAAGa,UAAU,wBAEf,4BACEA,UAAU,8BACVC,QAASJ,KAAKN,iBAEd,uBAAGS,UAAU,yBAEf,4BACEA,UAAU,4BACVC,QAASJ,KAAKJ,cAEd,uBAAGO,UAAU,uB,GA5CHE,kBCuBLC,EAvBMC,gBAAK,SAAChB,GACzB,IAAMiB,EAAWC,sBASjB,OACE,0BAAMN,UAAU,WAAWO,SARZ,SAACC,GAChBA,EAAMC,iBACN,IAAMC,EAAWL,EAASM,QAAQC,MAClCjB,QAAQC,IAAIc,GACZA,GAAYtB,EAAMyB,MAAMH,KAKtB,2BACEI,IAAKT,EACLU,KAAK,OACLf,UAAU,YACVgB,YAAY,UAEd,4BAAQhB,UAAU,cAAlB,WCSSiB,E,uKAxBH,IAAD,OAEP,OADAtB,QAAQC,IAAI,UAEV,6BACE,kBAAC,EAAD,CAAciB,MAAOhB,KAAKT,MAAMyB,QAChC,4BACGhB,KAAKT,MAAM8B,OAAOC,KAAI,SAAC7B,GAAD,OACrB,kBAAC,EAAD,CACE8B,IAAK9B,EAAM+B,GACX/B,MAAOA,EACPD,YAAa,EAAKD,MAAMC,YACxBG,YAAa,EAAKJ,MAAMI,YACxBE,SAAU,EAAKN,MAAMM,eAI3B,4BAAQM,UAAU,eAAeC,QAASJ,KAAKT,MAAMkC,SAArD,kB,GAjBaC,aCWNC,E,uKAVX,OADA7B,QAAQC,IAAI,UAEV,yBAAKI,UAAU,UACb,uBAAGA,UAAU,4BACb,+CACA,0BAAMA,UAAU,gBAAgBH,KAAKT,MAAMqC,iB,GAP9BvB,iB,GCGHqB,Y,aCkBHG,EArBK,SAACtC,GAAW,IAAD,EACHuC,mBAAS,GADN,mBACtB5B,EADsB,KACf6B,EADe,KAEvBC,EAAUC,mBAEV3C,EAAkB4C,uBAAY,WAClCH,EAAS7B,EAAQ,MAGnB,OACE,wBAAIC,UAAU,SACZ,0BAAMc,IAAKe,EAAS7B,UAAU,cAA9B,WAGA,0BAAMA,UAAU,eAAeD,GAC/B,4BAAQC,UAAU,8BAA8BC,QAASd,GACvD,uBAAGa,UAAU,0BCVrBgC,IAASC,OAAO,kBAAC,EAAD,MAAiBC,SAASC,eAAe,W","file":"static/js/main.b2c1caca.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\n\nclass Habit extends PureComponent {\n  componentDidMount() {\n    console.log(`habit: ${this.props.habit.name} mounted`);\n  }\n\n  componentWillUnmount() {\n    console.log(`habit: ${this.props.habit.name} will unmounted`);\n  }\n\n  handleIncrement = () => {\n    this.props.onIncrement(this.props.habit);\n  };\n\n  handleDecrement = () => {\n    this.props.onDecrement(this.props.habit);\n  };\n\n  handleDelete = () => {\n    this.props.onDelete(this.props.habit);\n  };\n\n  render() {\n    const { name, count } = this.props.habit;\n    console.log(`habit ${name}`);\n    return (\n      <li className=\"habit\">\n        <span className=\"habit-name\">{name}</span>\n        <span className=\"habit-count\">{count}</span>\n        <button\n          className=\"habit-button habit-increase\"\n          onClick={this.handleIncrement}\n        >\n          <i className=\"fas fa-plus-square\" />\n        </button>\n        <button\n          className=\"habit-button habit-decrease\"\n          onClick={this.handleDecrement}\n        >\n          <i className=\"fas fa-minus-square\" />\n        </button>\n        <button\n          className=\"habit-button habit-delete\"\n          onClick={this.handleDelete}\n        >\n          <i className=\"fas fa-trash\" />\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Habit;\n","import React, { createRef, memo } from \"react\";\n\nconst HabitAddForm = memo((props) => {\n  const inputRef = createRef();\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    const newHabit = inputRef.current.value;\n    console.log(newHabit);\n    newHabit && props.onAdd(newHabit);\n  };\n\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit}>\n      <input\n        ref={inputRef}\n        type=\"text\"\n        className=\"add-input\"\n        placeholder=\"Habit\"\n      />\n      <button className=\"add-button\">Add</button>\n    </form>\n  );\n});\n\nexport default HabitAddForm;\n","import React, { Component } from \"react\";\nimport Habit from \"./habit\";\nimport HabitAddForm from \"./habitAddForm\";\n\nclass Habits extends Component {\n  render() {\n    console.log(\"Habits\");\n    return (\n      <div>\n        <HabitAddForm onAdd={this.props.onAdd} />\n        <ul>\n          {this.props.habits.map((habit) => (\n            <Habit\n              key={habit.id}\n              habit={habit}\n              onIncrement={this.props.onIncrement}\n              onDecrement={this.props.onDecrement}\n              onDelete={this.props.onDelete}\n            />\n          ))}\n        </ul>\n        <button className=\"habits-reset\" onClick={this.props.onReset}>\n          Reset All\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Habits;\n","import React, { Component, PureComponent } from \"react\";\n\nclass Navbar extends PureComponent {\n  render() {\n    console.log(\"navbar\");\n    return (\n      <div className=\"navbar\">\n        <i className=\"navbar-logo fas fa-leaf\" />\n        <span>Habit Tracker</span>\n        <span className=\"navbar-count\">{this.props.totalCount}</span>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Habits from \"./components/habits\";\nimport Navbar from \"./components/navbar\";\n\nclass App extends Component {\n  state = {\n    habits: [\n      { id: 1, name: \"Reading\", count: 0 },\n      { id: 2, name: \"Running\", count: 0 },\n      { id: 3, name: \"Coding\", count: 0 },\n    ],\n  };\n\n  handleIncrement = (habit) => {\n    // 얕은 복사이기 때문에 배열 안의 객체의 주소값은 동일\n    // const _habits = [...this.state.habits];\n    // const index = _habits.indexOf(habit);\n    // _habits[index].count += 1;\n    // _habits[index].count += 1;\n    const _habits = this.state.habits.map((item) => {\n      if (item.id === habit.id) {\n        return { ...habit, count: habit.count + 1 };\n      }\n      return item;\n    });\n    this.setState({ habits: _habits });\n  };\n\n  handleDecrement = (habit) => {\n    // const _habits = [...this.state.habits];\n    // const index = _habits.indexOf(habit);\n    // const count = _habits[index].count - 1;\n    // _habits[index].count = count < 0 ? 0 : count;\n    const _habits = this.state.habits.map((item) => {\n      if (item.id === habit.id) {\n        const count = habit.count - 1;\n        return { ...habit, count: count < 0 ? 0 : count };\n      }\n      return item;\n    });\n    this.setState({ habits: _habits });\n  };\n\n  handleDelete = (habit) => {\n    const _habits = this.state.habits.filter((item) => item.id !== habit.id);\n    this.setState({ habits: _habits });\n  };\n\n  handleAdd = (habit) => {\n    const habits = [\n      ...this.state.habits,\n      { id: Date.now(), name: habit, count: 0 },\n    ];\n    this.setState({ habits });\n  };\n\n  handleReset = () => {\n    const habits = this.state.habits.map((habit) => {\n      if (habit.count !== 0) {\n        return { ...habit, count: 0 };\n      }\n      return habit;\n    });\n    this.setState({ habits });\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar\n          totalCount={\n            this.state.habits.filter((habit) => habit.count !== 0).length\n          }\n        />\n        <Habits\n          habits={this.state.habits}\n          onIncrement={this.handleIncrement}\n          onDecrement={this.handleDecrement}\n          onDelete={this.handleDelete}\n          onAdd={this.handleAdd}\n          onReset={this.handleReset}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { useState, useRef, useCallback } from \"react\";\n\nconst SimpleHabit = (props) => {\n  const [count, setCount] = useState(0);\n  const spanRef = useRef();\n\n  const handleIncrement = useCallback(() => {\n    setCount(count + 1);\n  });\n\n  return (\n    <li className=\"habit\">\n      <span ref={spanRef} className=\"habit-name\">\n        Reading\n      </span>\n      <span className=\"habit-count\">{count}</span>\n      <button className=\"habit-button habit-increase\" onClick={handleIncrement}>\n        <i className=\"fas fa-plus-square\" />\n      </button>\n    </li>\n  );\n};\n\nexport default SimpleHabit;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\nimport \"@fortawesome/fontawesome-free/js/all.js\";\nimport SimpleHabit from \"./components/simpleHabit\";\n\nReactDOM.render(<SimpleHabit />, document.getElementById(\"root\"));\n"],"sourceRoot":""}